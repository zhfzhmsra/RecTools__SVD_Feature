cmake_minimum_required(VERSION 3.2)
project(svdfeature_1_2_2)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

set(SOURCE_FILES
    apex-tensor/apex_exp_template.h
    apex-tensor/apex_random.h
    apex-tensor/apex_stream.h
    apex-tensor/apex_tensor.h
    apex-tensor/apex_tensor_config.h
    apex-tensor/apex_tensor_cpu.h
    apex-tensor/apex_tensor_cpu_inline.h
    apex-tensor/apex_tensor_cpu_inline_common.h
    apex-tensor/apex_tensor_func_decl.h
    apex-tensor/apex_tensor_func_decl_common.h
    apex-tensor/apex_tensor_sse.h
    apex-utils/apex_buffer_loader.h
    apex-utils/apex_config.h
    apex-utils/apex_evaluator.h
    apex-utils/apex_matrix_csr.h
    apex-utils/apex_task.h
    apex-utils/apex_thread.h
    apex-utils/apex_utils.h
    demo/basicMF/basicMF.conf
    demo/basicMF/mkbasicfeature.py
    demo/basicMF/run-ml100K.sh
    demo/basicMF/run.sh
    demo/basicMF/ua.base.example
    demo/basicMF/ua.test.example
    demo/binaryClassification/binaryClassification.conf
    demo/binaryClassification/run.sh
    demo/binaryClassification/ua.base.example
    demo/binaryClassification/ua.test.example
    demo/implicitFeedback/implicitFeedback.conf
    demo/implicitFeedback/mkbasicfeature.py
    demo/implicitFeedback/mkimplicitfeedbackfeature.py
    demo/implicitFeedback/run-ml100K.sh
    demo/implicitFeedback/run.sh
    demo/implicitFeedback/ua.base.feedbackexample
    demo/implicitFeedback/ua.base.group.example
    demo/implicitFeedback/ua.test.example
    demo/implicitFeedback/ua.test.feedbackexample
    demo/neighborhoodModel/neighborhoodModel.conf
    demo/neighborhoodModel/run.sh
    demo/neighborhoodModel/ua.base.example
    demo/neighborhoodModel/ua.test.example
    demo/pairwiseRank/eval.py
    demo/pairwiseRank/mkbasicfeature.py
    demo/pairwiseRank/mkimplicitfeedbackfeature.py
    demo/pairwiseRank/mkimplicitfeedbackfeaturetest.py
    demo/pairwiseRank/mktestrank.py
    demo/pairwiseRank/pairwiseRank.conf
    demo/pairwiseRank/pairwiseRankML100K.conf
    demo/pairwiseRank/README
    demo/pairwiseRank/run-ml100K.sh
    demo/pairwiseRank/run.sh
    demo/pairwiseRank/sampleneg.py
    demo/pairwiseRank/ua.base.feedbackexample
    demo/pairwiseRank/ua.base.group.example
    demo/pairwiseRank/ua.test.example
    demo/pairwiseRank/ua.test.feedbackexample
    demo/clean.sh
    demo/README
    solvers/base-solver/apex_svd_base.cpp
    solvers/base-solver/apex_svd_base.h
    solvers/bilinear/apex_svd_bilinear.cpp
    solvers/bilinear/apex_svd_bilinear.h
    solvers/example/apex_svd_lite.cpp
    solvers/example/apex_svd_lite.h
    solvers/gbrt/apex_gbrt.cpp
    solvers/gbrt/apex_gbrt.h
    solvers/gbrt/apex_reg_tree.cpp
    solvers/gbrt/apex_reg_tree.h
    solvers/multi-imfb/apex_multi_imfb.cpp
    solvers/multi-imfb/apex_multi_imfb.h
    tools/combine_ugroup.cpp
    tools/kddcup_combine_ugroup.cpp
    tools/line_reorder.cpp
    tools/line_shuffle.cpp
    tools/make_feature_buffer.cpp
    tools/make_ugroup_buffer.cpp
    tools/svdpp_randorder.cpp
    apex_svd.cpp
    apex_svd.h
    apex_svd_data.cpp
    apex_svd_data.h
    apex_svd_model.h
    Makefile
    README
    svd_feature.cpp
    svd_feature_infer.cpp)

add_executable(svdfeature_1_2_2 ${SOURCE_FILES})